# https://rosettacode.org/wiki/15_Puzzle_Game

"libutil"@import;

N:4;

cells:[];

hole:[
	row:0,
	column:0
];

dx:[  0,  0, -1, +1 ];
dy:[ -1, +1,  0,  0 ];

setup(): (
	count: 0,
	
	(row:0; row < N; row++) ?* (
		(column:0; column < N; column++) ?* (
			cells[row * N + column] = (=count),
			count++
		)
	),
	
	hole row = 0, hole column = 0,

	(i:0; i < 127; i++) ?* (
		update(select(4))
	)
);

update(move): (
	r: hole row    + dy[move], r = min(r, N-1),
	c: hole column + dx[move], c = min(c, N-1),
	
	(r <> hole row || c <> hole column) ? (
		cells[hole row * N + hole column] = cells[r * N + c],
		
		cells[r * N + c] = 0,
		hole row         = r,
		hole column      = c
	)
);

is_not_finished(): (
	return:0, count:0,
	
	(row:0; return == 0 && row < N; row++) ?* (
		(column:0; return == 0 && column < N; column++) ?* (
			count++,
			
			(cells[row * N + column] <> count) ? (
				return = 1
			)
		)
	),
	
	return
);

show_cells(): (
	``@println,
	(row:0; row < N; row++) ?* (
		(column:0; column < N; column++) ?* (
			(cells[row * N + column]) ? (
				(" : ", itos(2, cells[row * N + column]))@print
			;
				" :   "@print
			)
		),
		" :"@println
	),
	``@println
);

get_move(): (
	s:getcmd(),
	(i:0; i < s@length; i++) ?* (
		s[i] ?: (
		(`u`: update(0));
		(`d`: update(1));
		(`l`: update(2));
		(`r`: update(3))
		)
	)
);

setup();
show_cells();

(is_not_finished()) ?* (
	get_move(),
	show_cells()
);

"You won"@println;


